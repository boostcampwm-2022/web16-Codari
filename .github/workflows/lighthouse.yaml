name: Run lighthouse CI When Pull Request

on:
  pull_request:
    branches: ['dev']
    paths:
      - './frontend/**'
  workflow_dispatch:

jobs:
  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18.7.0
        uses: actions/setup-node@v3
        with:
          node-version: 18.7.0

      - name: Install packages
        run: |
          cd ./frontend
          npm ci

      - name: Build
        run: |
          cd ./frontend
          npm run build
        env: 
          CI: false

      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          cd ./frontend
          npm install -g @lhci/cli
          lhci autorun || echo "üö® Fail to Run Lighthouse CI!"

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |

            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync("./frontend/lhci_reports/manifest.json"));
            let comments = "";

            results.forEach((result) => {
              const { summary, jsonPath } = result;
              const { audits } = details;

              const details = JSON.parse(fs.readFileSync(jsonPath));
              const formatScore = (res) => Math.round(res * 100);

              Object.keys(summary).forEach(
                (key) => (summary[key] = formatScore(summary[key]))
              );

              const scoreEmoji = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");
              const reportRow = (label, score) => `| ${scoreEmoji(score)} ${label} | ${score} |`;
              const detailRow = (label, score, displayValue) => `${reportRow(label, score)} ${displayValue} |`;

              const report = [`‚ö°Ô∏è Lighthouse Report!`,
              `| Category | Score |`,
              `| -------- | ----- |`,
              `${reportRow('Performance', summary.performance)}`,
              `${reportRow('Accessibility', summary.accessibility)}`,
              `${reportRow('Best practices', summary['best-practices'])}`,
              `${reportRow('SEO', summary.seo)}`,
              `${reportRow('PWA', summary.pwa)}`].join('\n');

              const detail = [`üîé Performance Details`,
              `| Category | Score | DisplayValue |`,
              `| -------- | ----- | ------------ |`,
              `${detailRow("First Contentful Paint", audits['first-contentful-paint'].score * 100, audits['first-contentful-paint'].displayValue)}`,
              `${detailRow("Largest Contentful Paint", audits['largest-contentful-paint'].score * 100, audits['largest-contentful-paint'].displayValue)}`].join('\n');

              comments += report + "\n" + detail + "\n";
            });
            core.setOutput('comments', comments)

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}
